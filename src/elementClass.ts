export interface ElementClass {
  new (): HTMLElement
  prototype: HTMLElement
}

export type ElementClasses = Record<string, ElementClass>

const elementClasses: ElementClasses = {
  br: HTMLBRElement,
  base: HTMLBaseElement,
  button: HTMLButtonElement,
  canvas: HTMLCanvasElement,
  dl: HTMLDListElement,
  data: HTMLDataElement,
  datalist: HTMLDataListElement,
  details: HTMLDetailsElement,
  dialog: HTMLDialogElement,
  dir: HTMLDirectoryElement,
  div: HTMLDivElement,
  embed: HTMLEmbedElement,
  fieldset: HTMLFieldSetElement,
  font: HTMLFontElement,
  form: HTMLFormElement,
  frame: HTMLFrameElement,
  hr: HTMLHRElement,
  head: HTMLHeadElement,
  // Heading: HTMLHeadingElement,
  h1: HTMLHeadingElement,
  h2: HTMLHeadingElement,
  h3: HTMLHeadingElement,
  h4: HTMLHeadingElement,
  h5: HTMLHeadingElement,
  h6: HTMLHeadingElement,
  html: HTMLHtmlElement,
  iframe: HTMLIFrameElement,
  img: HTMLImageElement,
  input: HTMLInputElement,
  li: HTMLLIElement,
  label: HTMLLabelElement,
  legend: HTMLLegendElement,
  map: HTMLMapElement,
  marquee: HTMLMarqueeElement,
  media: HTMLMediaElement,
  menu: HTMLMenuElement,
  meta: HTMLMetaElement,
  meter: HTMLMeterElement,
  mod: HTMLModElement,
  ol: HTMLOListElement,
  object: HTMLObjectElement,
  optgroup: HTMLOptGroupElement,
  option: HTMLOptionElement,
  output: HTMLOutputElement,
  p: HTMLParagraphElement,
  param: HTMLParamElement,
  picture: HTMLPictureElement,
  pre: HTMLPreElement,
  progress: HTMLProgressElement,
  quote: HTMLQuoteElement,
  script: HTMLScriptElement,
  select: HTMLSelectElement,
  slot: HTMLSlotElement,
  source: HTMLSourceElement,
  span: HTMLSpanElement,
  caption: HTMLTableCaptionElement,
  td: HTMLTableCellElement,
  col: HTMLTableColElement,
  table: HTMLTableElement,
  tr: HTMLTableRowElement,
  tbody: HTMLTableSectionElement,
  thead: HTMLTableSectionElement,
  tfoot: HTMLTableSectionElement,
  template: HTMLTemplateElement,
  textarea: HTMLTextAreaElement,
  time: HTMLTimeElement,
  title: HTMLTitleElement,
  track: HTMLTrackElement,
  ul: HTMLUListElement,
  // unknown: HTMLUnknownElement,
}

export function getElementClass(name: string): {new (): HTMLElement; prototype: HTMLElement} {
  return elementClasses[name] || HTMLElement
}
